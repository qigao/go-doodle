syntax = "proto3";

package forum.v1;

option go_package = "grpc/gen/proto;proto";

import "google/api/annotations.proto";
import "forum/v1/user.proto";
import "forum/v1/empty.proto";

message Article {
  string slug = 1;
  string title = 2;
  string description = 3;
  string body = 4;
  repeated string tagList = 5;
  string createdAt = 6;
  string updatedAt = 7;
  bool favorited = 8;
  int32 favoritesCount = 9;
  Profile author = 10;
}

message Comment {
  string id = 1;
  string createdAt = 2;
  string updatedAt = 3;
  string body = 4;
  Profile author = 5;
}

service Articles {
  rpc CreateArticle (CreateAritcleRequest) returns (ArticleResponse) {
    option (google.api.http) = {
      post: "/articles"
      body: "*"
    };
  }
  rpc GetFeedArticles (GetFeedArticlesRequest) returns (ArticlesResponse) {
    option (google.api.http) = {
      get: "/articles/feed"
    };
  }
  rpc GetArticle (GetArticleRequest) returns (ArticleResponse) {
    option (google.api.http) = {
      get: "/articles/{slug}"
    };
  }
  rpc GetArticles (GetArticlesRequest) returns (ArticlesResponse) {
    option (google.api.http) = {
      get: "/articles"
    };
  }
  rpc UpdateArticle (UpdateArticleRequest) returns (ArticleResponse) {
    option (google.api.http) = {
      put: "/articles/{article.slug}"
      body: "*"
    };
  }
  rpc DeleteArticle (DeleteArticleRequest) returns (Empty) {
    option (google.api.http) = {
      delete: "/articles/{slug}"
    };
  }
  rpc FavoriteArticle (FavoriteArticleRequest) returns (ArticleResponse) {
    option (google.api.http) = {
      post: "/articles/{slug}/favorite"
      body: "*"
    };
  }
  rpc UnfavoriteArticle (UnfavoriteArticleRequest) returns (ArticleResponse) {
    option (google.api.http) = {
      delete: "/articles/{slug}/favorite"
    };
  }
  rpc GetTags (Empty) returns (TagsResponse) {
    option (google.api.http) = {
      get: "/tags"
    };
  }
  rpc CreateComment (CreateCommentRequest) returns (CommentResponse) {
    option (google.api.http) = {
      post: "/articles/{slug}/comments"
      body: "*"
    };
  }
  rpc GetComments (GetCommentsRequest) returns (CommentsResponse) {
    option (google.api.http) = {
      get: "/articles/{slug}/comments"
    };
  }
  rpc DeleteComment (DeleteCommentRequest) returns (Empty) {
    option (google.api.http) = {
      get: "/articles/{slug}/comments/{id}"
    };
  }
}

/* request message */
message CreateAritcleRequest {
  message Article {
    string title = 1;
    string description = 2;
    string body = 3;
    repeated string tagList = 4;
  }

  Article article = 1;
}

message GetArticleRequest {
  string slug = 1;
}

message GetArticlesRequest {
  string tag = 1;
  string author = 2;
  string favorited = 3;
  int64 limit = 4;
  int64 offset = 5;
}

message GetFeedArticlesRequest {
  int64 limit = 1;
  int64 offset = 2;
}

message UpdateArticleRequest {
  message Article {
    string title = 1;
    string description = 2;
    string body = 3;
    string slug = 4;
  }
  Article article = 1;
}

message DeleteArticleRequest {
  string slug = 1;
}

message FavoriteArticleRequest {
  string slug = 1;
}

message UnfavoriteArticleRequest {
  string slug = 1;
}

message CreateCommentRequest {
  string slug = 1;

  message Comment {
    string body = 1;
  }
  Comment comment =2;
}

message GetCommentsRequest {
  string slug = 1;
}

message DeleteCommentRequest {
  string slug = 1;
  string id = 2;
}

/* response message */
message ArticleResponse {
  Article article = 1;
}

message ArticlesResponse {
  repeated Article articles = 1;
  int32 articlesCount = 2;
}

message TagsResponse {
  repeated string tags = 1;
}

message CommentResponse {
  Comment comment = 1;
}

message CommentsResponse {
  repeated Comment comments = 1;
}
